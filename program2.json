{"_id": "/program/e2210c5a-f324-11ec-b939-0242ac122333", "uri": "/program/e2210c5a-f324-11ec-b939-0242ac122333", "publisher": null, "level": "intermedio", "rights": "Attribution-ShareAlike 4.0 International", "description": "Completa el programa para que funcione correctamente", "icon": "coffee", "author": "mariosky@gmail.com", "tags": ["completa", "csharp"], "image_url": null, "title": "Completa el programa de polimorfismo con interfaces", "type": "prog", "lang": "csharp", "external_url": "https://sfo2.digitaloceanspaces.com/evo/uno/autores/mario.jpg", "unit_test": "public class InterfaceTest\n{\n    [Fact]\n    public void Interface()\n    {\n      List<IDibujable> objetos = new List<IDibujable>();\n\n        IDibujable rect = new Rect\u00e1ngulo() {X=120, Y=100};\n        (rect as Rect\u00e1ngulo)!.ImprimeCoordenadas(); \n\n        objetos.Add(rect); \n        objetos.Add(new Rect\u00e1ngulo() {X=100, Y=200}); \n\n        foreach(var o in objetos)\n            o.Dibuja(); // Cada objeto  \n    }\n}\n\n\n\n", "initial_code": "\ninterface Dibujable \n {\n  double  X { get; set; }\n  double  Y { get; set; } \n }\n\nclass Rect\u00e1ngulo : IDibujable\n{\n    private double _X, _Y;\n\n    public void Dibuja() { \n        Console.WriteLine($\"Se dibuja un c\u00edrculo en ({X},{Y})\");\n        }\n\n    public double X{ \n        set => _X = value;\n        get => _X; \n    }\n\n    public double Y {\n        set { _Y = value; }\n        get { return _Y; }\n    }\n\n    public void ImprimeCoordenadas() {\n        Console.WriteLine($\"Mis coordenadas son: ({X},{Y})\");\n    }\n}\n\nclass Alumno  \n{\n    public string? Nombre;\n    public double X {get; set;} \n    public double Y {get; set;} \n\n    public void Dibuja() { \n        Console.WriteLine($\"Se dibuja un c\u00edrculo en ({X},{Y})\");\n        }\n\n\n    public void ImprimeNombre() {\n        Console.WriteLine($\"Mis coordenadas son: ({X},{Y})\");\n    }\n}\nclass Program \n{\n    static void MainEjemplo()\n    {\n        List<IDibujable> objetos = new List<IDibujable>();\n\n        IDibujable rect = new Rect\u00e1ngulo() {X=120, Y=100};\n        rect.ImprimeCoordenadas(); \n\n        objetos.Add(rect); \n        objetos.Add(new Rect\u00e1ngulo() {X=100, Y=200}); \n        objetos.Add(new Alumno() {X=300, Y=300}); \n\n        foreach(var o in objetos)\n            o.Dibuja(); // Cada objeto se dibuja de acuerdo a su implementaci\u00f3n \n    }\n}\n\n", "instructions": "<h3>Implementa el polimorfismo con interfaces</h3>\n<p>Nuestro programa tiene algunos errores, \nfaltan algunas propiedades, algunos nombres est\u00e1n mal. \nTu tarea es corregir el desastre. </p>\n<h3>Referencias</h3>\n<p>El ejemplo utilizado es una adaptaci\u00f3n de <a href=\"https://en.wikibooks.org/wiki/C_Sharp_Programming/Interfaces\">Interfaces en C# de Wikibooks</a>  </p>", "reg_exp": ""}